#!/bin/sh
#
# Dell Inc. PROPRIETARY INFORMATION
#
# This software is supplied under the terms of a license agreement or
# nondisclosure agreement with Dell Inc. and may not
# be copied or disclosed except in accordance with the terms of that
# agreement.
#
# Copyright (c) 2010-2011 Dell Inc. All Rights Reserved.
#
# Version: 1.0
# The following is for Redhat
#
#chkconfig: 2345 00 20
#description: Starts/Stops the mdadm monitoring script to set drive LEDs
#processname:

### BEGIN INIT INFO
# Provides: dellmdmon
# Required-Start: ipmi
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: Start Dell LED mdadm monitoring daemon at boot time
# Description: This script starts mdadm monitoring service and calls \
#   external script to set drive LEDs when an event occurs.
### END INIT INFO

# Source function library.
. /etc/rc.d/init.d/functions

prog=dell_mdleds
exec=/usr/bin/dell_mdleds
lockfile=/var/lock/subsys/$prog
pidfile=/var/run/$prog.pid

start() {
    service ipmi start
    echo -n $"Starting $prog: "
    # if not running, start it up here, usually something like "daemon $exec"
    daemon --pidfile $pidfile /sbin/mdadm --monitor --scan --daemonize --pid-file $pidfile --program $exec

    retval=$?
    echo
    [ $retval -eq 0 ] && touch $lockfile
    return $retval
}

stop() {
    echo -n $"Stopping $prog: "
    killproc -p $pidfile /sbin/mdadm
    retval=$?
    echo
    [ $retval -eq 0 ] && rm -f $lockfile
    return $retval
}

restart() {
    stop
    start
}

reload() {
    restart
}

force_reload() {
    restart
}

rh_status() {
    # run checks to determine if the service is running or use generic status
    status $prog
}

rh_status_q() {
    rh_status >/dev/null 2>&1
}


case "$1" in
    start)
        rh_status_q && exit 0
        $1
        ;;
    stop)
        rh_status_q || exit 0
        $1
        ;;
    restart)
        $1
        ;;
    reload)
        rh_status_q || exit 7
        $1
        ;;
    force-reload)
        force_reload
        ;;
    status)
        rh_status
        ;;
    condrestart|try-restart)
        rh_status_q || exit 0
        restart
        ;;
    *)
        echo $"Usage: $0 {start|stop|status|restart|condrestart|try-restart|reload|force-reload}"
        exit 2
esac
exit $?
